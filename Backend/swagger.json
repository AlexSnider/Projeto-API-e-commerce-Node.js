{
  "openapi": "3.0.0",
  "info": {
    "title": "API mini e-commerce",
    "description": "API para o projeto de mini e-commerce.",
    "contact": {
      "name": "Support",
      "email": "alexsnider8@gmail.com"
    },
    "version": "1.0.0"
  },
  "paths": {
    "/register": {
      "post": {
        "tags": ["User"],
        "description": "Register a new user.",
        "requestBody": {
          "description": "Necessary data to register a new user.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestRegister"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User registered successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseRegister"
                }
              }
            }
          },
          "400": {
            "description": "Insuficient data or user already exists."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["User"],
        "description": "Login a user.",
        "requestBody": {
          "description": "Necessary data to login a user.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLogin"
                }
              }
            }
          },
          "400": {
            "description": "All fields are required."
          },
          "401": {
            "description": "Invalid credentials ."
          },
          "404": {
            "description": "User not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": ["User"],
        "description": "Logout a user.",
        "responses": {
          "200": {
            "description": "User logged out successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseLogout"
                }
              }
            }
          },
          "404": {
            "description": "No token was provided."
          }
        }
      }
    },
    "/changepassword": {
      "put": {
        "tags": ["User"],
        "description": "Send request to change user password.",
        "requestBody": {
          "description": "Necessary data to change user password.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestChangePassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Send request to change user password.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseChangePassword"
                }
              }
            }
          },
          "400": {
            "description": "All fields are required."
          },
          "404": {
            "description": "Email or username not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/reset-password/{token}": {
      "post": {
        "tags": ["User"],
        "parameters": [
          {
            "name": "token",
            "in": "path",
            "required": true,
            "description": "The token provided by the user.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "description": "Send request to reset user password.",
        "requestBody": {
          "description": "Necessary data to reset user password.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestResetPassword"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password reseted successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseResetPassword"
                }
              }
            }
          },
          "400": {
            "description": "Token not provided."
          },
          "404": {
            "description": "Email or username not found."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "RequestRegister": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "User name.",
            "example": "alex oliveira"
          },
          "email": {
            "type": "string",
            "description": "User E-mail.",
            "example": "alex@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User password.",
            "example": "aleX321%#!"
          }
        }
      },
      "ResponseRegister": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "User name.",
            "example": "alex oliveira"
          },
          "email": {
            "type": "string",
            "description": "User E-mail.",
            "example": "alex@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User password.",
            "example": "aleX321%#!"
          },
          "id": {
            "type": "string",
            "description": "User ID.",
            "format": "uuid"
          }
        }
      },
      "RequestLogin": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "User name.",
            "example": "alex oliveira"
          },
          "password": {
            "type": "string",
            "description": "User password.",
            "example": "aleX321%#!"
          },
          "token": {
            "type": "string",
            "description": "User token.",
            "example": ""
          }
        }
      },
      "ResponseLogin": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "User name.",
            "example": "alex oliveira"
          },
          "password": {
            "type": "string",
            "description": "User password.",
            "example": "aleX321%#!"
          }
        }
      },
      "ResponseLogout": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Logout message.",
            "example": "User logged out successfully and token deleted."
          }
        }
      },
      "RequestChangePassword": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User E-mail.",
            "example": "anytsh8@gmail.com"
          },
          "username": {
            "type": "string",
            "description": "User name.",
            "example": "alex oliveira"
          }
        }
      },
      "ResponseChangePassword": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Change password message.",
            "example": "Password reset link has been sent to the E-mail registered."
          }
        }
      },
      "RequestResetPassword": {
        "type": "object",
        "properties": {
          "password": {
            "type": "string",
            "description": "User new password.",
            "example": "aleX321%#!"
          }
        }
      },
      "ResponseResetPassword": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Reset password message.",
            "example": "Password changed successfully."
          }
        }
      }
    }
  }
}
